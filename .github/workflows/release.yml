name: Release
on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

  # also on manual trigger
  workflow_dispatch:
    inputs:
      release_version:
        description: 'The version number for the release'
        required: true

jobs:
  build-static:
    name: Create Release for Linux (static)
    runs-on: ${{ matrix.os }}
    container:
      image: alpine:3.21
      volumes:
        - /:/host
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          target: linux-amd64
          ghcup: https://downloads.haskell.org/~ghcup/x86_64-linux-ghcup
        - os: ubuntu-24.04-arm
          target: linux-arm64
          ghcup: https://downloads.haskell.org/~ghcup/aarch64-linux-ghcup
    steps:
      - name: Install system dependencies
        run: |
          apk add --no-cache curl gcc g++ gmp-dev ncurses-dev libffi-dev make xz gzip tar perl git bash sudo binutils-gold
          apk add --no-cache zlib zlib-dev zlib-static gmp gmp-dev ncurses-static nodejs

      - name: Install ghcup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf ${{ matrix.ghcup }}  > /usr/bin/ghcup
          chmod +x /usr/bin/ghcup
          echo "$HOME/.ghcup/bin" $GITHUB_PATH
        shell: bash

      - name: Install GHC and cabal
        run: |
          ghcup install ghc   --force -i /usr/local     9.8.4
          ghcup install cabal --force -i /usr/local/bin
        shell: bash

      - name: Prepare container for linux-arm64-musl platform
        if: ${{ matrix.target == 'linux-arm64' }}
        run: |
          # workaround to support javascript actions in alpine arm64.
          # https://github.com/actions/runner/issues/801#issuecomment-2394425757
          sed -i "s:ID=alpine:ID=NotpineForGHA:" /etc/os-release
          cd /host/home/runner/runners/*/externals/
          rm -rf node20/* && mkdir node20/bin && ln -s /usr/bin/node node20/bin/node

      - uses: actions/checkout@v4

      - name: Update cabal cache
        run: cabal update
        shell: bash

      - name: create ~/.local/bin
        run: mkdir -p "$HOME/.local/bin"
        shell: bash

      
      - run: echo "HOME=$HOME" >> $GITHUB_ENV
        shell: bash

      - name: Freeze
        run: cabal freeze

      - name: Cache store
        uses: actions/cache@v4.2.2
        with:
          path: ~/.cabal/store
          key: ${{ matrix.os }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Install cabal dependencies
        run: cabal build --only-dependencies --ghc-options='-split-sections -optl-static'
        shell: bash

      - name: Install
        run: cabal install --installdir="$HOME/.local/bin" --install-method=copy --overwrite-policy=always --ghc-options='-split-sections -optl-static'
        shell: bash

      - name: Strip
        run: strip ~/.local/bin/hadolint
        shell: bash
       
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hadolint-${{ matrix.target }}
          path: ~/.local/bin/hadolint
          retention-days: 3

  build-dynamic:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-13
          target: macos-x86_64
        - os: macos-14
          target: macos-arm64
        - os: windows-latest
          target: windows-x86_64
    steps:
      - uses: actions/checkout@v4

      - id: setup-haskell
        name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.8'

      - name: Freeze
        run: cabal freeze

      - name: Cache store
        uses: actions/cache@v4.2.2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ matrix.os }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build binaries
        run: |
          mkdir dist
          cabal install exe:hadolint --install-method=copy --overwrite-policy=always --installdir=dist --ghc-options="-fPIC"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hadolint-${{ matrix.target }}
          path: ${{ runner.os == 'Windows' && 'dist\\hadolint.exe' || './dist/hadolint' }}
          retention-days: 3

  docker:
    needs: [build-static, build-dynamic]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["amd64", "arm64"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: hadolint-linux-${{matrix.target}}
          path: ${{matrix.target}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image Scratch
        uses: docker/build-push-action@v6
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: base
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-${{matrix.target}}

      - name: Push Docker Image Debian
        uses: docker/build-push-action@v6
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: debian
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-debian-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-debian-${{matrix.target}}

      - name: Push Docker Image Alpine
        uses: docker/build-push-action@v6
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: alpine
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-alpine-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-alpine-${{matrix.target}}

  docker-release:
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: ["scratch", "alpine", "debian"]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set target and tag
        id: build-opts
        run: |
            if [ "${{ matrix.distro }}" = 'scratch' ]; then
              echo "target=${{github.sha}}" >> $GITHUB_OUTPUT
              echo "latest=latest" >> $GITHUB_OUTPUT

              if [[ $GITHUB_REF == refs/tags/* ]]; then
                echo "tag=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
              else
                echo "tag=${{ github.event.inputs.release_version }}" >> $GITHUB_OUTPUT
              fi
            else
              echo "target=${{github.sha}}-${{matrix.distro}}" >> $GITHUB_OUTPUT
              echo "latest=latest-${{ matrix.distro }}" >> $GITHUB_OUTPUT

              if [[ $GITHUB_REF == refs/tags/* ]]; then
                echo "tag=${GITHUB_REF/refs\/tags\/v/}-${{ matrix.distro }}" >> $GITHUB_OUTPUT
              else
                echo "tag=${{ github.event.inputs.release_version }}-${{ matrix.distro }}" >> $GITHUB_OUTPUT
              fi
            fi

      - name: Push Docker Images
        run: |
          docker pull ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64
          docker pull ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker pull hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64
          docker pull hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64

          docker manifest create \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.latest }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.latest }}
          docker manifest create \
            hadolint/hadolint:${{ steps.build-opts.outputs.latest }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:${{ steps.build-opts.outputs.latest }}

          docker manifest create \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.tag }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.tag }}
          docker manifest create \
            hadolint/hadolint:${{ steps.build-opts.outputs.tag }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:${{ steps.build-opts.outputs.tag }}

          docker manifest create \
            ghcr.io/hadolint/hadolint:v${{ steps.build-opts.outputs.tag }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:v${{ steps.build-opts.outputs.tag }}
          docker manifest create \
            hadolint/hadolint:v${{ steps.build-opts.outputs.tag }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:v${{ steps.build-opts.outputs.tag }}

  release:
    if: github.event_name != 'workflow_dispatch'
    needs: [docker-release, build-static, build-dynamic]
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:

    - name: Check out
      uses: actions/checkout@v4

    - name: Download Linux x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-linux-amd64
        path: artifacts/hadolint-linux-x86_64

    - name: Download Linux arm64
      uses: actions/download-artifact@v4
      with:
        name: hadolint-linux-arm64
        path: artifacts/hadolint-linux-arm64

    - name: Download Macos x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-macos-x86_64
        path: artifacts/hadolint-macos-x86_64

    - name: Download Macos arm
      uses: actions/download-artifact@v4
      with:
        name: hadolint-macos-arm64
        path: artifacts/hadolint-macos-arm64

    - name: Download Windows x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-windows-x86_64
        path: artifacts/hadolint-windows-x86_64

    - name: Rename and Checksum
      run: |
        mv artifacts/hadolint-linux-x86_64/hadolint hadolint-linux-x86_64
        mv artifacts/hadolint-linux-arm64/hadolint hadolint-linux-arm64
        mv artifacts/hadolint-macos-x86_64/hadolint hadolint-macos-x86_64
        mv artifacts/hadolint-macos-arm64/hadolint hadolint-macos-arm64
        mv artifacts/hadolint-windows-x86_64/hadolint hadolint-windows-x86_64.exe

        sha256sum -b hadolint-linux-x86_64 > hadolint-linux-x86_64.sha256
        sha256sum -b hadolint-linux-arm64 > hadolint-linux-arm64.sha256
        sha256sum -b hadolint--x86_64 > hadolint-macos-x86_64.sha256
        sha256sum -b hadolint-macos-arm64 > hadolint-macos-arm64.sha256
        sha256sum -b hadolint-windows-x86_64.exe > hadolint-windows-x86_64.exe.sha256

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          hadolint-linux-x86_64
          hadolint-linux-x86_64.sha256
          hadolint-linux-arm64
          hadolint-linux-arm64.sha256
          hadolint-macos-x86_64
          hadolint-macos-x86_64.sha256
          hadolint-macos-arm64
          hadolint-macos-arm64.sha256
          hadolint-windows-x86_64.exe
          hadolint-windows-x86_64.exe.sha256
