name: Build With Nix
on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["linux-static", "linux-arm-static"]
    steps:
    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-21.11
        extra_nix_config: |
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo=
          substituters = https://hydra.iohk.io https://cache.nixos.org/ https://iohk.cachix.org

    - uses: cachix/cachix-action@v10
      with:
        name: hadolint
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pushFilter: '(-source$|-config$|-hadolint-root$|hadolint-gitFiles|git-ls-files|hadolint-exe-hadolint-x86_64-unknown-linux-musl-|hadolint-exe-hadolint-aarch64-unknown-linux-musl-|hadolint-lib-hadolint-x86_64-unknown-linux-musl-|hadolint-lib-hadolint-aarch64-unknown-linux-musl-)'

    - name: Build
      run: |
        nix-build release.nix -A "${{matrix.target}}" -j3

    - name: Set binary ARCH
      id: build-opts
      run: |
        if [ "${{ matrix.target }}" = 'linux-static' ]; then
          echo ::set-output name=arch::amd64
        else
          echo ::set-output name=arch::arm64
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: hadolint-Linux-${{steps.build-opts.outputs.arch}}
        path: result/bin/hadolint
        retention-days: 3

  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["amd64", "arm64"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: hadolint-Linux-${{matrix.target}}
          path: ${{matrix.target}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_IO_REGISTRY_TOKEN }}

      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-${{matrix.target}}

  docker-release:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_IO_REGISTRY_TOKEN }}

      - name: Push Docker Image
        run: |
          docker pull ghcr.io/hadolint/hadolint:${{github.sha}}-amd64
          docker pull ghcr.io/hadolint/hadolint:${{github.sha}}-arm64

          docker manifest create \
            ghcr.io/hadolint/hadolint:${{github.sha}} \
            ghcr.io/hadolint/hadolint:${{github.sha}}-amd64 \
            ghcr.io/hadolint/hadolint:${{github.sha}}-arm64

          docker manifest push ghcr.io/hadolint/hadolint:${{github.sha}}
